<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="busbike.base.dao.mapper.DictTypeMapper" >
  <resultMap id="BaseResultMap" type="busbike.base.pojo.po.DictType" >
    <id column="dict_id" property="dictId" jdbcType="INTEGER" />
    <result column="type_code" property="typeCode" jdbcType="VARCHAR" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="type_sort" property="typeSort" jdbcType="VARCHAR" />
    <result column="code_length" property="codeLength" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dict_id, type_code, type_name, remark, type_sort, code_length
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="busbike.base.pojo.po.DictTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dict_type
    where dict_id = #{dictId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dict_type
    where dict_id = #{dictId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="busbike.base.pojo.po.DictTypeExample" >
    delete from dict_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="busbike.base.pojo.po.DictType" >
    insert into dict_type (dict_id, type_code, type_name, 
      remark, type_sort, code_length
      )
    values (#{dictId,jdbcType=INTEGER}, #{typeCode,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{typeSort,jdbcType=VARCHAR}, #{codeLength,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="busbike.base.pojo.po.DictType" >
    insert into dict_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dictId != null" >
        dict_id,
      </if>
      <if test="typeCode != null" >
        type_code,
      </if>
      <if test="typeName != null" >
        type_name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="typeSort != null" >
        type_sort,
      </if>
      <if test="codeLength != null" >
        code_length,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dictId != null" >
        #{dictId,jdbcType=INTEGER},
      </if>
      <if test="typeCode != null" >
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="typeSort != null" >
        #{typeSort,jdbcType=VARCHAR},
      </if>
      <if test="codeLength != null" >
        #{codeLength,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="busbike.base.pojo.po.DictTypeExample" resultType="java.lang.Integer" >
    select count(*) from dict_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dict_type
    <set >
      <if test="record.dictId != null" >
        dict_id = #{record.dictId,jdbcType=INTEGER},
      </if>
      <if test="record.typeCode != null" >
        type_code = #{record.typeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.typeName != null" >
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.typeSort != null" >
        type_sort = #{record.typeSort,jdbcType=VARCHAR},
      </if>
      <if test="record.codeLength != null" >
        code_length = #{record.codeLength,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dict_type
    set dict_id = #{record.dictId,jdbcType=INTEGER},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      type_sort = #{record.typeSort,jdbcType=VARCHAR},
      code_length = #{record.codeLength,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="busbike.base.pojo.po.DictType" >
    update dict_type
    <set >
      <if test="typeCode != null" >
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="typeSort != null" >
        type_sort = #{typeSort,jdbcType=VARCHAR},
      </if>
      <if test="codeLength != null" >
        code_length = #{codeLength,jdbcType=VARCHAR},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="busbike.base.pojo.po.DictType" >
    update dict_type
    set type_code = #{typeCode,jdbcType=VARCHAR},
      type_name = #{typeName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      type_sort = #{typeSort,jdbcType=VARCHAR},
      code_length = #{codeLength,jdbcType=VARCHAR}
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
</mapper>